{"version":3,"sources":["components/AppHeader/header.module.css","components/AppHeader/AppHeader.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SearchPanel/SearchPanel.js","components/ToDoListItems/ToDoListItems.js","components/ToDoList/ToDoList.js","components/AddTask/AddTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","props","className","style","head","headTitle","active","done","ItemStatusFilter","filter","onFilterChange","buttons","name","label","map","clazz","key","onClick","SearchPanel","state","term","val","this","filterList","type","placeholder","onChange","Component","ToDoListItems","onDelete","id","important","onLabelClick","onMarkImportant","classNames","ToDoList","elements","todoData","item","itemProps","AddTask","addTask","App","setState","indx","findIndex","el","slice","newItem","search","items","length","toLowerCase","indexOf","e","termValue","target","value","filterTab","newLabel","previousSibling","forEach","newTask","doneCount","todoCount","visibleItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.586f1c27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"header_head__3XGf6\"};","import React from \"react\";\r\nimport style from './header.module.css';\r\nimport '../../App.css';\r\n\r\nconst AppHeader = (props) => {\r\n    return (\r\n        <div className={style.head}>\r\n            <h1 className={style.headTitle}>My ToDo list</h1>\r\n            <div>\r\n                <div>More to do: <span>{props.active}</span></div>\r\n                <div>Done: <span>{props.done}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import React from \"react\";\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const arrayButtons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    const {filter, onFilterChange} = props;\r\n    const buttons = arrayButtons.map(({name, label}) => {\r\n        const clazz = filter === name ? 'btn-info' : 'btn-outline-secondary';\r\n        return (\r\n            <button key = {name} className={`btn ${clazz}`}\r\n                    onClick={() => onFilterChange(name)}>\r\n                {label}\r\n            </button>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='btn-group'>\r\n            {buttons}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from \"react\";\r\nimport './SearchPanel.css';\r\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\r\n\r\nclass SearchPanel extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            term: '',\r\n            val: ''\r\n        }\r\n    }\r\n\r\n    // ClickButton = () => {\r\n    //     this.setState({val:this.someHTMLTag.attributes.price.value});\r\n    // };\r\n\r\n    render() {\r\n        const {filterList, filter, onFilterChange} = this.props;\r\n        return (\r\n            <div className='search-wrap'>\r\n                <input className='search-input' type='text' placeholder='Search task' onChange={filterList}/>\r\n                <ItemStatusFilter filter={filter}\r\n                                  onFilterChange={onFilterChange}/>\r\n                {/*<div>*/}\r\n                {/*    <input type=\"text\" placeholder=\"test\" price='500' defaultValue={this.state.val}*/}\r\n                {/*           ref={(input) => this.someHTMLTag = input} />*/}\r\n                {/*    <button onClick={this.ClickButton}>Submit</button>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React from \"react\";\r\nimport '../../App.css';\r\nimport './ToDoListItems.css';\r\n\r\nconst ToDoListItems = (props) => {\r\n        const { label, id, onDelete, done, important, onLabelClick, onMarkImportant } = props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        return (\r\n            <span className={classNames}>\r\n                <span className='todo-list-item-label' onClick={onLabelClick}>\r\n                    {label}\r\n                </span>\r\n                <span >\r\n                    <button onClick={onMarkImportant} className=\"btn btn-outline-success btn-sm\">\r\n                        <i className='fa fa-exclamation'/>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-danger btn-sm\" onClick={onDelete}>\r\n                        <i className='fa fa-trash-o'/>\r\n                    </button>\r\n                </span>\r\n            </span>\r\n        )\r\n};\r\n\r\nexport default ToDoListItems;","import React from \"react\";\r\nimport '../../App.css';\r\nimport ToDoListItems from \"../ToDoListItems/ToDoListItems\";\r\nimport './ToDoList.css';\r\n\r\nconst ToDoList = (props) =>  {\r\n        const {todoData} = props;\r\n        const elements = todoData.map((item) =>{\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id} className='list-group-item'>\r\n                    <ToDoListItems\r\n                        {...itemProps}\r\n                        onDelete ={() => {props.onDelete(id)}}\r\n                        onLabelClick ={() => {props.onLabelClick(id)}}\r\n                        onMarkImportant ={() => {props.onMarkImportant(id)}}\r\n                    />\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ol className='list-group todo-list'>\r\n                {elements}\r\n            </ol>\r\n        )\r\n};\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport './AddTask.css';\r\n\r\n\r\n\r\nconst AddTask = (props) => {\r\n        return (\r\n            <div className='addTaskWrap'>\r\n                <input className='addText search-input' placeholder='Add Task' type='text'/>\r\n                <button className='AddTask btn btn-info' onClick={props.addTask}>Add</button>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default AddTask;","import React, {Component} from 'react';\nimport './App.css';\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport SearchPanel from \"./components/SearchPanel/SearchPanel\";\nimport ToDoList from \"./components/ToDoList/ToDoList\";\nimport AddTask from \"./components/AddTask/AddTask\";\n\n\nclass App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoData: [\n                {\n                    id: 1,\n                    label: 'Drink coffee',\n                    important: false,\n                    done: false\n                },\n                {\n                    id: 2,\n                    label: 'Learn React',\n                    important: true,\n                    done: true\n\n                },\n                {\n                    id: 3,\n                    label: 'Chill',\n                    important: true,\n                    done: false\n                },\n                {\n                    id: 4,\n                    label: 'Sleep',\n                    important: false,\n                    done: true\n                }\n            ],\n            term: '',\n            filter: 'all'\n        }\n    }\n\n    onDelete = (id) => {\n\n        this.setState(({todoData}) => {\n            const indx = todoData.findIndex((el) => el.id === id);\n\n            const newtodoData = [...todoData.slice(0, indx), ...todoData.slice(indx + 1)];\n\n            return  {\n                todoData: newtodoData\n            }\n        });\n    };\n\n    onMarkImportant = (id) => {\n        this.setState(({todoData}) => {\n            const indx = todoData.findIndex((el) => el.id === id);\n            const newItem = {...todoData[indx], important: !todoData[indx].important};\n            const newtodoData = [...todoData.slice(0, indx), newItem,...todoData.slice(indx + 1)];\n\n            return {\n                todoData: newtodoData\n            }\n        })\n    };\n\n    onLabelClick = (id) => {\n        this.setState(({todoData}) => {\n            const indx = todoData.findIndex((el) => el.id === id);\n            const newItem = {...todoData[indx], done: !todoData[indx].done};\n            const newtodoData = [...todoData.slice(0, indx), newItem,...todoData.slice(indx + 1)];\n\n            return {\n                todoData: newtodoData\n            }\n        })\n    };\n\n    search = (items, term) => {\n        if(term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(term) > -1;\n        });\n    };\n\n    filterList = (e) => {\n        const termValue = e.target.value.toLowerCase();\n        this.setState({term: termValue})\n    };\n\n    filterTab = (items, filter) => {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n\n        }\n    };\n\n    onFilterChange = (name) => {\n        this.setState({filter: name})\n    };\n\n    addTask = (e) => {\n        const newLabel = e.target.previousSibling.value;\n\n        this.setState(({todoData}) => {\n            var id = 1;\n\n            todoData.forEach(e => {\n               if (id <= e.id){\n                   id = e.id + 1;\n               }\n            });\n\n            const newTask = {\n                id: id,\n                label: newLabel,\n                important: false,\n                done: false\n            };\n\n            const newtodoData = [...todoData, newTask];\n\n            return {\n                todoData: newtodoData\n                }\n            }\n        );\n        e.target.previousSibling.value = '';\n    };\n\n    render() {\n        const {todoData, term, filter} = this.state;\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n        const visibleItems = this.filterTab(\n                                            this.search(todoData, term),\n                                            filter);\n        return (\n            <div className='taskWrap'>\n                <AppHeader active = {doneCount} done = {todoCount}/>\n                <SearchPanel filterList = {this.filterList}\n                             filter = {filter}\n                             onFilterChange = {this.onFilterChange}\n                             />\n                <ToDoList todoData = {visibleItems}\n                          onDelete = {this.onDelete}\n                          onLabelClick = {this.onLabelClick}\n                          onMarkImportant = {this.onMarkImportant}\n                />\n                <AddTask addTask = {this.addTask}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}